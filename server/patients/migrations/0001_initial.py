# Generated by Django 3.0.5 on 2020-04-11 21:13

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('beds', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_cm', models.IntegerField(blank=True, null=True)),
                ('weight_kg', models.FloatField(blank=True, null=True)),
                ('NIP_id', models.CharField(max_length=7, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('family_name', models.CharField(blank=True, max_length=100, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('H', 'Homme'), ('F', 'Femme')], max_length=1, null=True)),
                ('detection_covid', models.BooleanField(default=False)),
                ('detection_orlEntree', models.BooleanField(default=False)),
                ('detection_ERentree', models.BooleanField(default=False)),
                ('detection_ERpremierMardi', models.BooleanField(default=False)),
                ('detection_ERsecondMardi', models.BooleanField(default=False)),
                ('antecedents', models.TextField(blank=True, help_text='json {"Cardio": "note"}̀', null=True)),
                ('allergies', models.TextField(blank=True, help_text='["pollen"]', null=True)),
                ('severity', models.IntegerField(choices=[(0, 'A risque'), (1, 'Instable'), (2, 'Stable')], default=2)),
                ('recent_disease_history', models.TextField(blank=True, default='')),
                ('last_edited_recent_disease_history', models.DateTimeField(blank=True, default=None, null=True)),
                ('evolution', models.TextField(blank=True, default='')),
                ('last_edited_evolution', models.DateTimeField(blank=True, default=None, null=True)),
                ('todo_list', models.TextField(blank=True, default='', null=True)),
                ('last_edited_todo_list', models.DateTimeField(blank=True, default=None, null=True)),
                ('assigned_caregivers', models.ManyToManyField(blank=True, related_name='patients_assigned_to', to='users.UserProfile')),
                ('current_reanimation_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to='beds.ReanimationService')),
            ],
            options={
                'unique_together': {('NIP_id',)},
            },
        ),
        migrations.CreateModel(
            name='GeneralPatient',
            fields=[
                ('patient_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='patients.Patient')),
                ('duree_symptomes', models.IntegerField(blank=True, null=True)),
                ('cardio_past', models.IntegerField(choices=[(0, 'no previous condition'), (1, 'minor condition: heart murmur'), (2, 'major condition: IDM, cardiac failure')], default=0)),
                ('pneumo_past', models.IntegerField(choices=[(0, 'no previous condition'), (1, 'asthma')], default=0)),
                ('chir_past', models.IntegerField(choices=[(0, 'no former surgery'), (1, 'torax_surgery'), (2, 'abdominal surgery'), (3, 'orthopedic surgery'), (4, 'torax + abdominal'), (5, 'torax + abdominal + orthopedic '), (6, 'abdominal + orthopedic')], default=0)),
                ('data_diagnostic', models.DateField(blank=True, null=True)),
                ('data_hospital', models.DateField(blank=True, null=True)),
                ('data_reanimation', models.DateField(blank=True, null=True)),
                ('cough', models.BooleanField(default=False)),
                ('fever', models.BooleanField(default=False)),
                ('appetite_loss', models.BooleanField(default=False)),
                ('dispnea', models.BooleanField(default=False)),
                ('sore_throat', models.BooleanField(default=False)),
                ('diarrhea', models.BooleanField(default=False)),
                ('nausea', models.BooleanField(default=False)),
                ('vertigo', models.BooleanField(default=False)),
                ('headache', models.BooleanField(default=False)),
                ('vomit', models.BooleanField(default=False)),
                ('score_sofa', models.IntegerField(blank=True, null=True)),
                ('so2_admission', models.FloatField(blank=True, null=True)),
                ('ta_systolic_admission', models.FloatField(blank=True, null=True)),
                ('ta_diastolic_admission', models.FloatField(blank=True, null=True)),
                ('hospitalization_type', models.IntegerField(blank=True, choices=[(0, 'ambulatory'), (1, 'conventional'), (2, 'intensive care'), (3, 'reanimation'), (4, 'reanimation + ECMO')], default=None, null=True)),
                ('tdm_ad_frosted_glass', models.BooleanField(null=True)),
                ('tdm_ad_atelectasie', models.BooleanField(null=True)),
                ('tdm_ad_pleural_obstruction', models.BooleanField(null=True)),
                ('surinfection_bacterienne', models.BooleanField(blank=True, null=True)),
                ('traitement_en_cours', models.IntegerField(blank=True, choices=[(0, 'Pas de traitement'), (1, 'Antibiothérapie')], default=None, null=True)),
            ],
            bases=('patients.patient',),
        ),
        migrations.CreateModel(
            name='Ventilation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateTimeField(auto_now_add=True)),
                ('volume', models.FloatField()),
                ('respiratory_freq', models.FloatField()),
                ('teleinspiratory_ventilatory_pause', models.BooleanField()),
                ('tv_pause_duration', models.FloatField()),
                ('positive_expiratory_pressure', models.FloatField()),
                ('ventral_decubitis', models.BooleanField()),
                ('curare', models.FloatField(default=0)),
                ('NO', models.FloatField(default=0)),
                ('clinical_situation', models.IntegerField(choices=[(0, 'stable'), (1, 'improvement'), (2, 'degradation'), (4, 'death'), (5, 'extubation')])),
                ('pa', models.FloatField()),
                ('temperature', models.FloatField()),
                ('saturation_o2', models.FloatField()),
                ('score_respiration_pao2_fio2', models.FloatField()),
                ('ventilation_artificielle', models.BooleanField()),
                ('score_coagulation', models.FloatField()),
                ('score_hepatique', models.FloatField()),
                ('score_cardiovasculaire', models.IntegerField(choices=[(0, "Absence d'hypotension"), (1, 'PAmoy < 70 mmHg  sans drogue vasoactive'), (2, 'Utilisation Dopamine (< 5µg/kg/mn) ou Dobutamine'), (3, 'Utilisation Dopamine (> 5µg/kg/mn) ou Noradrénaline/Adrénaline (< 0.1 µg/kg/mn)'), (4, 'Utilisation Dopamine (> 15 µg/kg/mn) ou Noradrénaline/Adrénaline (> 0.1 µg/kg/mn)')])),
                ('score_sofa', models.IntegerField()),
                ('score_neurologique', models.IntegerField()),
                ('score_renal_creatine', models.FloatField()),
                ('score_renal_diurese', models.FloatField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='StatusMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_type', models.IntegerField(choices=[(0, 'Ratio pression artérielle sur fraction inspirée'), (1, 'Noradrénaline'), (2, 'Créatinémie'), (3, 'Decubitus ventral'), (4, 'Mode ventilatoire'), (5, 'Sédation'), (6, 'Antibiotiques'), (7, 'Type de prélèvements'), (8, 'Germes'), (9, 'Curares')])),
                ('value', models.TextField(blank=True)),
                ('created_date', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measures_done', to='users.UserProfile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_measures', to='patients.Patient')),
                ('reanimation_service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='measures_done_here', to='beds.ReanimationService')),
            ],
        ),
    ]
